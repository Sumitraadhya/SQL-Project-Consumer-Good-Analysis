#Request 1 :

# Provide the list of markets in which customer  "Atliq  Exclusive"  operates its 
#business in the  APAC  region. 

select distinct market
from dim_customer
where customer like "%Atliq Exclusive%"
and region="APAC"
order by market;

#######################################################################################################################################################
#Request 2 :

# What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields, 
#unique_products_2020,  unique_products_2021,   percentage_chg
#The final output contains these fields - segment, product_count_2020, product_count_2021, difference
	
drop temporary table if exists summary;
create temporary table summary(
	with
	cte1 as(
		select
				count(distinct product_code) as unique_products_2020 from fact_sales_monthly where fiscal_year=2020
		),
	cte2 as(
		select 
			count(distinct product_code) as unique_products_2021 from fact_sales_monthly where fiscal_year=2021
		)
	select * from cte1 cross join cte2
);
select 
	*,
    unique_products_2021-unique_products_2020 as increase_in_2021,
    (unique_products_2021-unique_products_2020)*100/unique_products_2020 as percentage_chg
from summary;

#######################################################################################################################################################

#Request 3:

#Provide a report with all the unique product counts for each  segment  and sort them in descending order of product counts.
#The final output contains 2 fields -- segment  and product_count

select 
	segment,
	count(distinct product_code) as product_count
from dim_product
group by segment
order by product_count desc

#######################################################################################################################################################

#Request 4:

#Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? 
#The final output contains these fields - segment, product_count_2020, product_count_2021, difference
	
drop temporary table if exists summary;
create temporary table summary(
	with
	cte1 as(
		select 
			segment as segment_2020,
			count(distinct product_code) as unique_products_2020 
            from fact_sales_monthly 
            join dim_product 
				using(product_code)
			where fiscal_year=2020
            group by segment
            
		),
	cte2 as(
		select 
			segment as segment_2021,
			count(distinct product_code) as unique_products_2021 
            from fact_sales_monthly 
            join dim_product
				using(product_code)
            where fiscal_year=2021
            group by segment
		)
	select 
		*
		from cte1 
        join cte2 on
			cte1.segment_2020=cte2.segment_2021
);
select 
	segment_2020 as segment,
    unique_products_2020,
    unique_products_2021,
    unique_products_2021-unique_products_2020 as increase_in_2021
from summary
order by increase_in_2021 desc;

#########################################################################################################################################################

#Request 5 :

-- Get the products that have the highest and lowest manufacturing costs. The final output should contain these fields, 
-- product_code , product , manufacturing_cost product

select 
		product_code,
        product,
        manufacturing_cost
from fact_manufacturing_cost
join dim_product using(product_code)
where 
	manufacturing_cost in ( (select max(manufacturing_cost) from fact_manufacturing_cost),
								(select min(manufacturing_cost) from fact_manufacturing_cost))

########################################################################################################################################################

#Request 6:

-- Generate a report which contains the top 5 customers who received an average high  pre_invoice_discount_pct  
-- for the  fiscal  year 2021  and in the Indian  market. The final output contains these fields, 
-- customer_code , customer , average_discount_percentage

SELECT 
	customer_code,
    customer,
    avg(pre_invoice_discount_pct) as average_discount_percentage
    
FROM gdb023.fact_sales_monthly 
join fact_pre_invoice_deductions p
	using(customer_code,fiscal_year)
join dim_customer c
	using(customer_code)
where 
	fiscal_year=2021 and
    market="India"
group by customer_code
order by average_discount_percentage desc
limit 5

##########################################################################################################################################################

#Request 7 :

--  Get the complete report of the Gross sales amount for the customer  “Atliq Exclusive”  for each month  .  
-- This analysis helps to  get an idea of low and high-performing months and take strategic decisions. 
-- The final report contains these columns: Month , Year , Gross sales Amount 
with 
cte1 as
	(SELECT 
		*,
		monthname(date) as month,
        (sold_quantity) * gross_price as gross_amount
	FROM gdb023.fact_sales_monthly
	join fact_gross_price
		using(product_code,fiscal_year)
	join dim_customer 
		using(customer_code)
	where customer="Atliq Exclusive")
    
    
select 
	fiscal_year,
	month,
	sum(gross_amount) as gross_sales_amount
	#dense_rank() over(partition by fiscal_year order by sum(gross_amount) desc) as rnk
from cte1
group by fiscal_year,month

##########################################################################################################################################################

#Request 8:

-- In which quarter of 2020, got the maximum total_sold_quantity? The final output contains these fields 
-- sorted by the total_sold_quantity,  Quarter , total_sold_quantity
with cte as(
select 
	*,
    concat("Q",quarter(date_Add(date, interval 4 month))) as quarter
    
from fact_sales_monthly
where fiscal_year=2020)
select 
	quarter,
	sum(sold_quantity) as total_sold_quantity
from cte
group by quarter
order by total_sold_quantity desc

##########################################################################################################################################################

#Request 9:

-- Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution?  
-- The final output  contains these fields, channel , gross_sales_mln , percentage 
with cte as(
select 
	channel,
    sum((sold_quantity * gross_price))/1000000 as gross_sales_mln
from fact_sales_monthly fs
join fact_gross_price
	using(product_code,fiscal_year)
join dim_customer
	using(customer_code)
where fs.fiscal_year=2021
group by channel)
select 
	*,
    gross_sales_mln*100/sum(gross_sales_mln) over() as pct_contribution
from cte
order by pct_contribution desc

########################################################################################################################################################

#Request 10:

-- Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? 
-- The final output contains these fields, division , product_code , product , total_sold_quantity , rank_order
with cte as
(select 
	division,
    product_code,
    product,
    sum(sold_quantity) as total_sold_quantity,
    dense_rank() over(partition by division order by sum(sold_quantity) desc) as rank_order
from fact_sales_monthly s
join dim_product p 
	using(product_code)
where fiscal_year=2021
group by product_code)
select
	*
from cte
where rank_order<=3

########################################################################################################################################################




